package master.realist.REAlistGUIGenerator.shared.model;

// Generated Dec 10, 2013 2:10:07 PM by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Policy generated by hbm2java
 */
@Entity
@Table(name = "policy", catalog = "rea")
public class Policy implements java.io.Serializable {

	private int id;
	private PolicyOutcome policyOutcome;
	private Policytype policytype;
	private Date startDate;
	private Date endDate;
	private Set<FactorAgenttype> factorAgenttypes = new HashSet<FactorAgenttype>(
			0);
	private Set<FactorAgent> factorAgents = new HashSet<FactorAgent>(0);
	private Set<FactorResourcetype> factorResourcetypes = new HashSet<FactorResourcetype>(
			0);
	private Set<FactorResource> factorResources = new HashSet<FactorResource>(0);
	private Set<FactorEventtype> factorEventtypes = new HashSet<FactorEventtype>(
			0);

	public Policy() {
	}

	public Policy(int id, PolicyOutcome policyOutcome, Policytype policytype) {
		this.id = id;
		this.policyOutcome = policyOutcome;
		this.policytype = policytype;
	}

	public Policy(int id, PolicyOutcome policyOutcome, Policytype policytype,
			Date startDate, Date endDate,
			Set<FactorAgenttype> factorAgenttypes,
			Set<FactorAgent> factorAgents,
			Set<FactorResourcetype> factorResourcetypes,
			Set<FactorResource> factorResources,
			Set<FactorEventtype> factorEventtypes) {
		this.id = id;
		this.policyOutcome = policyOutcome;
		this.policytype = policytype;
		this.startDate = startDate;
		this.endDate = endDate;
		this.factorAgenttypes = factorAgenttypes;
		this.factorAgents = factorAgents;
		this.factorResourcetypes = factorResourcetypes;
		this.factorResources = factorResources;
		this.factorEventtypes = factorEventtypes;
	}

	@Id
	@Column(name = "Id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Policy_Outcome_Id", nullable = false)
	public PolicyOutcome getPolicyOutcome() {
		return this.policyOutcome;
	}

	public void setPolicyOutcome(PolicyOutcome policyOutcome) {
		this.policyOutcome = policyOutcome;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PolicyType_Id", nullable = false)
	public Policytype getPolicytype() {
		return this.policytype;
	}

	public void setPolicytype(Policytype policytype) {
		this.policytype = policytype;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "StartDate", length = 19)
	public Date getStartDate() {
		return this.startDate;
	}

	public void setStartDate(Date startDate) {
		this.startDate = startDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "EndDate", length = 19)
	public Date getEndDate() {
		return this.endDate;
	}

	public void setEndDate(Date endDate) {
		this.endDate = endDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "policy")
	public Set<FactorAgenttype> getFactorAgenttypes() {
		return this.factorAgenttypes;
	}

	public void setFactorAgenttypes(Set<FactorAgenttype> factorAgenttypes) {
		this.factorAgenttypes = factorAgenttypes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "policy")
	public Set<FactorAgent> getFactorAgents() {
		return this.factorAgents;
	}

	public void setFactorAgents(Set<FactorAgent> factorAgents) {
		this.factorAgents = factorAgents;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "policy")
	public Set<FactorResourcetype> getFactorResourcetypes() {
		return this.factorResourcetypes;
	}

	public void setFactorResourcetypes(
			Set<FactorResourcetype> factorResourcetypes) {
		this.factorResourcetypes = factorResourcetypes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "policy")
	public Set<FactorResource> getFactorResources() {
		return this.factorResources;
	}

	public void setFactorResources(Set<FactorResource> factorResources) {
		this.factorResources = factorResources;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "policy")
	public Set<FactorEventtype> getFactorEventtypes() {
		return this.factorEventtypes;
	}

	public void setFactorEventtypes(Set<FactorEventtype> factorEventtypes) {
		this.factorEventtypes = factorEventtypes;
	}

}
