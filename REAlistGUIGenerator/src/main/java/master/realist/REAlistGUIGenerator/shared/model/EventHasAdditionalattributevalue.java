package master.realist.REAlistGUIGenerator.shared.model;

// Generated Dec 18, 2013 3:42:47 PM by Hibernate Tools 4.0.0

import java.util.Date;
import javax.persistence.AssociationOverride;
import javax.persistence.AssociationOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.JoinColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

/**
 * EventHasAdditionalattributevalue generated by hbm2java
 */
@Entity
@Table(name = "event_has_additionalattributevalue", catalog = "rea")
@AssociationOverrides({
	@AssociationOverride(name = "id.event", 
		joinColumns = @JoinColumn(name = "Event_Id")),
	@AssociationOverride(name = "id.attribute", 
		joinColumns = @JoinColumn(name = "Attribute_Id")) })
public class EventHasAdditionalattributevalue implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 538550730026629457L;
	private EventHasAdditionalattributevalueId id = new EventHasAdditionalattributevalueId();
	private Double numericValue;
	private String textualValue;
	private Boolean booleanValue;
	private Date datetimeValue;

	
	/**
	 * Default Constructor
	 */
	public EventHasAdditionalattributevalue() {
	}

	public EventHasAdditionalattributevalue(
			EventHasAdditionalattributevalueId id, Event event,
			Attribute attribute) {
		this.id = id;
		this.getId().setEvent(event);
		this.getId().setAttribute(attribute);
	}

	public EventHasAdditionalattributevalue(
			EventHasAdditionalattributevalueId id, Event event,
			Attribute attribute, Double numericValue, String textualValue,
			Boolean booleanValue, Date datetimeValue) {
		this.id = id;
		this.getId().setEvent(event);
		this.getId().setAttribute(attribute);
		this.numericValue = numericValue;
		this.textualValue = textualValue;
		this.booleanValue = booleanValue;
		this.datetimeValue = datetimeValue;
	}

	@EmbeddedId
	public EventHasAdditionalattributevalueId getId() {
		return this.id;
	}

	public void setId(EventHasAdditionalattributevalueId id) {
		this.id = id;
	}

	@Transient
	public Event getEvent() {
		return this.getId().getEvent();
	}

	public void setEvent(Event event) {
		this.getId().setEvent(event);;
	}

	@Transient
	public Attribute getAttribute() {
		return this.getId().getAttribute();
	}

	public void setAttribute(Attribute attribute) {
		this.getId().setAttribute(attribute);
	}

	@Column(name = "Numeric_Value", precision = 22, scale = 0)
	public Double getNumericValue() {
		return this.numericValue;
	}

	public void setNumericValue(Double numericValue) {
		this.numericValue = numericValue;
	}

	@Column(name = "Textual_Value", length = 45)
	public String getTextualValue() {
		return this.textualValue;
	}

	public void setTextualValue(String textualValue) {
		this.textualValue = textualValue;
	}

	@Column(name = "Boolean_Value")
	public Boolean getBooleanValue() {
		return this.booleanValue;
	}

	public void setBooleanValue(Boolean booleanValue) {
		this.booleanValue = booleanValue;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "Datetime_Value", length = 19)
	public Date getDatetimeValue() {
		return this.datetimeValue;
	}

	public void setDatetimeValue(Date datetimeValue) {
		this.datetimeValue = datetimeValue;
	}
	
	public boolean equals(Object o) {
		if (this == o)
			return true;
		if (o == null || getClass() != o.getClass())
			return false;
 
		EventHasAdditionalattributevalue that = (EventHasAdditionalattributevalue) o;
 
		if (getId() != null ? !getId().equals(that.getId())
				: that.getId() != null)
			return false;
 
		return true;
	}
 
	public int hashCode() {
		return (getId() != null ? getId().hashCode() : 0);
	}

}
