package master.realist.REAlistGUIGenerator.shared.model;

// Generated Nov 12, 2013 8:47:49 PM by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Currency generated by hbm2java
 */
@Entity
@Table(name = "currency", catalog = "rea")
public class Currency implements java.io.Serializable {

	private String id;
	private String fullname;
	private Set<EventSettlesClaim> eventSettlesClaims = new HashSet<EventSettlesClaim>(
			0);
	private Set<Event> events = new HashSet<Event>(0);
	private Set<Stockflow> stockflows = new HashSet<Stockflow>(0);
	private Set<Country> countries = new HashSet<Country>(0);
	private Set<Commitment> commitments = new HashSet<Commitment>(0);
	private Set<Reconciliation> reconciliations = new HashSet<Reconciliation>(0);
	private Set<Claim> claims = new HashSet<Claim>(0);
	private Set<EventMaterializesClaim> eventMaterializesClaims = new HashSet<EventMaterializesClaim>(
			0);
	private Set<Fulfills> fulfillses = new HashSet<Fulfills>(0);

	public Currency() {
	}

	public Currency(String id) {
		this.id = id;
	}

	public Currency(String id, String fullname,
			Set<EventSettlesClaim> eventSettlesClaims, Set<Event> events,
			Set<Stockflow> stockflows, Set<Country> countries,
			Set<Commitment> commitments, Set<Reconciliation> reconciliations,
			Set<Claim> claims,
			Set<EventMaterializesClaim> eventMaterializesClaims,
			Set<Fulfills> fulfillses) {
		this.id = id;
		this.fullname = fullname;
		this.eventSettlesClaims = eventSettlesClaims;
		this.events = events;
		this.stockflows = stockflows;
		this.countries = countries;
		this.commitments = commitments;
		this.reconciliations = reconciliations;
		this.claims = claims;
		this.eventMaterializesClaims = eventMaterializesClaims;
		this.fulfillses = fulfillses;
	}

	@Id
	@Column(name = "Id", unique = true, nullable = false, length = 3)
	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@Column(name = "Fullname", length = 45)
	public String getFullname() {
		return this.fullname;
	}

	public void setFullname(String fullname) {
		this.fullname = fullname;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "currency")
	public Set<EventSettlesClaim> getEventSettlesClaims() {
		return this.eventSettlesClaims;
	}

	public void setEventSettlesClaims(Set<EventSettlesClaim> eventSettlesClaims) {
		this.eventSettlesClaims = eventSettlesClaims;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "currency")
	public Set<Event> getEvents() {
		return this.events;
	}

	public void setEvents(Set<Event> events) {
		this.events = events;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "currency")
	public Set<Stockflow> getStockflows() {
		return this.stockflows;
	}

	public void setStockflows(Set<Stockflow> stockflows) {
		this.stockflows = stockflows;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "currency")
	public Set<Country> getCountries() {
		return this.countries;
	}

	public void setCountries(Set<Country> countries) {
		this.countries = countries;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "currency")
	public Set<Commitment> getCommitments() {
		return this.commitments;
	}

	public void setCommitments(Set<Commitment> commitments) {
		this.commitments = commitments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "currency")
	public Set<Reconciliation> getReconciliations() {
		return this.reconciliations;
	}

	public void setReconciliations(Set<Reconciliation> reconciliations) {
		this.reconciliations = reconciliations;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "currency")
	public Set<Claim> getClaims() {
		return this.claims;
	}

	public void setClaims(Set<Claim> claims) {
		this.claims = claims;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "currency")
	public Set<EventMaterializesClaim> getEventMaterializesClaims() {
		return this.eventMaterializesClaims;
	}

	public void setEventMaterializesClaims(
			Set<EventMaterializesClaim> eventMaterializesClaims) {
		this.eventMaterializesClaims = eventMaterializesClaims;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "currency")
	public Set<Fulfills> getFulfillses() {
		return this.fulfillses;
	}

	public void setFulfillses(Set<Fulfills> fulfillses) {
		this.fulfillses = fulfillses;
	}

}
