package master.realist.REAlistGUIGenerator.shared.model;

// Generated Nov 12, 2013 8:47:49 PM by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import master.realist.REAlistGUIGenerator.shared.dto.EventtypeDTO;

/**
 * Eventtype generated by hbm2java
 */
@Entity
@Table(name = "eventtype", catalog = "rea")
public class Eventtype implements java.io.Serializable {

	private String id;
	private Eventtype eventtype;
	private String name;
	private Boolean isIncrement;
	private Boolean isResourceUsed;
	private Boolean isExceptionEvent;
	private Boolean isSeries;
	private Set<Event> events = new HashSet<Event>(0);
	private Set<EventtypeHasAdditionalattribute> eventtypeHasAdditionalattributes = new HashSet<EventtypeHasAdditionalattribute>(
			0);
	private Set<FactorEventtype> factorEventtypes = new HashSet<FactorEventtype>(
			0);
	private Set<Commitment> commitments = new HashSet<Commitment>(0);
	private Set<Eventtypeparticipation> eventtypeparticipations = new HashSet<Eventtypeparticipation>(
			0);
	private Set<Eventtypestockflow> eventtypestockflows = new HashSet<Eventtypestockflow>(
			0);
	private Set<Dualitytype> dualitytypes = new HashSet<Dualitytype>(0);
	private Set<Eventtype> eventtypes = new HashSet<Eventtype>(0);
	
	/**
	 * Added constructor to convert a eventtypedto object to an eventtype object
	 * Needed to save in the DB
	 * @param eventtypeDTO
	 */
	public Eventtype(EventtypeDTO eventtypeDTO){
		// TODO: Adding parenteventtypes
		this.id = eventtypeDTO.getId();
		this.name = eventtypeDTO.getName();
		this.isIncrement = eventtypeDTO.getIsIncrement();
		this.isResourceUsed = eventtypeDTO.isResourceUsed();
		this.isExceptionEvent = eventtypeDTO.isExceptionEvent();
		this.isSeries = eventtypeDTO.isSeries();
	}
	
	public Eventtype() {
	}

	public Eventtype(String id) {
		this.id = id;
	}

	public Eventtype(
			String id,
			Eventtype eventtype,
			String name,
			Boolean isIncrement,
			Boolean isResourceUsed,
			Boolean isExceptionEvent,
			Boolean isSeries,
			Set<Event> events,
			Set<EventtypeHasAdditionalattribute> eventtypeHasAdditionalattributes,
			Set<FactorEventtype> factorEventtypes, Set<Commitment> commitments,
			Set<Eventtypeparticipation> eventtypeparticipations,
			Set<Eventtypestockflow> eventtypestockflows,
			Set<Dualitytype> dualitytypes, Set<Eventtype> eventtypes) {
		this.id = id;
		this.eventtype = eventtype;
		this.name = name;
		this.isIncrement = isIncrement;
		this.isResourceUsed = isResourceUsed;
		this.isExceptionEvent = isExceptionEvent;
		this.isSeries = isSeries;
		this.events = events;
		this.eventtypeHasAdditionalattributes = eventtypeHasAdditionalattributes;
		this.factorEventtypes = factorEventtypes;
		this.commitments = commitments;
		this.eventtypeparticipations = eventtypeparticipations;
		this.eventtypestockflows = eventtypestockflows;
		this.dualitytypes = dualitytypes;
		this.eventtypes = eventtypes;
	}

	@Id
	@Column(name = "Id", unique = true, nullable = false, length = 150)
	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ParentEventType_Id")
	public Eventtype getEventtype() {
		return this.eventtype;
	}

	public void setEventtype(Eventtype eventtype) {
		this.eventtype = eventtype;
	}

	@Column(name = "Name", length = 150)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "IsIncrement")
	public Boolean getIsIncrement() {
		return this.isIncrement;
	}

	public void setIsIncrement(Boolean isIncrement) {
		this.isIncrement = isIncrement;
	}

	@Column(name = "IsResourceUsed")
	public Boolean getIsResourceUsed() {
		return this.isResourceUsed;
	}

	public void setIsResourceUsed(Boolean isResourceUsed) {
		this.isResourceUsed = isResourceUsed;
	}

	@Column(name = "IsExceptionEvent")
	public Boolean getIsExceptionEvent() {
		return this.isExceptionEvent;
	}

	public void setIsExceptionEvent(Boolean isExceptionEvent) {
		this.isExceptionEvent = isExceptionEvent;
	}

	@Column(name = "IsSeries")
	public Boolean getIsSeries() {
		return this.isSeries;
	}

	public void setIsSeries(Boolean isSeries) {
		this.isSeries = isSeries;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "eventtype")
	public Set<Event> getEvents() {
		return this.events;
	}

	public void setEvents(Set<Event> events) {
		this.events = events;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "eventtype")
	public Set<EventtypeHasAdditionalattribute> getEventtypeHasAdditionalattributes() {
		return this.eventtypeHasAdditionalattributes;
	}

	public void setEventtypeHasAdditionalattributes(
			Set<EventtypeHasAdditionalattribute> eventtypeHasAdditionalattributes) {
		this.eventtypeHasAdditionalattributes = eventtypeHasAdditionalattributes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "eventtype")
	public Set<FactorEventtype> getFactorEventtypes() {
		return this.factorEventtypes;
	}

	public void setFactorEventtypes(Set<FactorEventtype> factorEventtypes) {
		this.factorEventtypes = factorEventtypes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "eventtype")
	public Set<Commitment> getCommitments() {
		return this.commitments;
	}

	public void setCommitments(Set<Commitment> commitments) {
		this.commitments = commitments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "eventtype")
	public Set<Eventtypeparticipation> getEventtypeparticipations() {
		return this.eventtypeparticipations;
	}

	public void setEventtypeparticipations(
			Set<Eventtypeparticipation> eventtypeparticipations) {
		this.eventtypeparticipations = eventtypeparticipations;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "eventtype")
	public Set<Eventtypestockflow> getEventtypestockflows() {
		return this.eventtypestockflows;
	}

	public void setEventtypestockflows(
			Set<Eventtypestockflow> eventtypestockflows) {
		this.eventtypestockflows = eventtypestockflows;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "dualitytype_allows_eventtype", catalog = "rea", joinColumns = { @JoinColumn(name = "EventType_Id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "DualityType_Id", nullable = false, updatable = false) })
	public Set<Dualitytype> getDualitytypes() {
		return this.dualitytypes;
	}

	public void setDualitytypes(Set<Dualitytype> dualitytypes) {
		this.dualitytypes = dualitytypes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "eventtype")
	public Set<Eventtype> getEventtypes() {
		return this.eventtypes;
	}

	public void setEventtypes(Set<Eventtype> eventtypes) {
		this.eventtypes = eventtypes;
	}

}
