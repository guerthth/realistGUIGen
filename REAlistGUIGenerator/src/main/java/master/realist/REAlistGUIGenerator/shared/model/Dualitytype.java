package master.realist.REAlistGUIGenerator.shared.model;

// Generated Nov 12, 2013 8:47:49 PM by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import master.realist.REAlistGUIGenerator.shared.dto.DualitytypeDTO;

/**
 * Dualitytype generated by hbm2java
 */
@Entity
@Table(name = "dualitytype", catalog = "rea")
public class Dualitytype implements java.io.Serializable {

	private String id;
	private String name;
	private boolean isConversion;
	private Set<Duality> dualities = new HashSet<Duality>(0);
	private Set<Eventtype> eventtypes = new HashSet<Eventtype>(0);
	private Set<Contracttype> contracttypes = new HashSet<Contracttype>(0);
	private Set<Claimtype> claimtypes = new HashSet<Claimtype>(0);

	/**
	 * Added constructor to convert a dualitytypedto object to a dualitytype object
	 * Needed to save in the DB
	 * @param dualitytypeDTO
	 */
	public Dualitytype(DualitytypeDTO dualitytypeDTO){
		// TODO: Adding all the attributes
		this.id = dualitytypeDTO.getId();
		this.name = dualitytypeDTO.getName();
		this.isConversion = dualitytypeDTO.isConversion();
	}
	
	public Dualitytype() {
	}

	public Dualitytype(String id, boolean isConversion) {
		this.id = id;
		this.isConversion = isConversion;
	}

	public Dualitytype(String id, String name, boolean isConversion,
			Set<Duality> dualities, Set<Eventtype> eventtypes,
			Set<Contracttype> contracttypes, Set<Claimtype> claimtypes) {
		this.id = id;
		this.name = name;
		this.isConversion = isConversion;
		this.dualities = dualities;
		this.eventtypes = eventtypes;
		this.contracttypes = contracttypes;
		this.claimtypes = claimtypes;
	}

	@Id
	@Column(name = "Id", unique = true, nullable = false, length = 150)
	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@Column(name = "Name", length = 150)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "IsConversion", nullable = false)
	public boolean isIsConversion() {
		return this.isConversion;
	}

	public void setIsConversion(boolean isConversion) {
		this.isConversion = isConversion;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "dualitytype")
	public Set<Duality> getDualities() {
		return this.dualities;
	}

	public void setDualities(Set<Duality> dualities) {
		this.dualities = dualities;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "dualitytype_allows_eventtype", catalog = "rea", joinColumns = { @JoinColumn(name = "DualityType_Id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "EventType_Id", nullable = false, updatable = false) })
	public Set<Eventtype> getEventtypes() {
		return this.eventtypes;
	}

	public void setEventtypes(Set<Eventtype> eventtypes) {
		this.eventtypes = eventtypes;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "contracttype_allows_dualitytype", catalog = "rea", joinColumns = { @JoinColumn(name = "DualityType_Id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "ContractType_Id", nullable = false, updatable = false) })
	public Set<Contracttype> getContracttypes() {
		return this.contracttypes;
	}

	public void setContracttypes(Set<Contracttype> contracttypes) {
		this.contracttypes = contracttypes;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "dualitytype_allows_claimtype", catalog = "rea", joinColumns = { @JoinColumn(name = "DualityType_Id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "ClaimType_Id", nullable = false, updatable = false) })
	public Set<Claimtype> getClaimtypes() {
		return this.claimtypes;
	}

	public void setClaimtypes(Set<Claimtype> claimtypes) {
		this.claimtypes = claimtypes;
	}

}
