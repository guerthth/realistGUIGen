package master.realist.REAlistGUIGenerator.shared.model;

// Generated Nov 12, 2013 8:47:49 PM by Hibernate Tools 4.0.0

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * EventtypeHasAdditionalattribute generated by hbm2java
 */
@Entity
@Table(name = "eventtype_has_additionalattribute", catalog = "rea")
public class EventtypeHasAdditionalattribute implements java.io.Serializable {

	private EventtypeHasAdditionalattributeId id;
	private Eventtype eventtype;
	private Attribute attribute;
	private boolean isOptional;
	private boolean isTypeProperty;
	private boolean isCommitmentProperty;

	public EventtypeHasAdditionalattribute() {
	}

	public EventtypeHasAdditionalattribute(
			EventtypeHasAdditionalattributeId id, Eventtype eventtype,
			Attribute attribute, boolean isOptional, boolean isTypeProperty,
			boolean isCommitmentProperty) {
		this.id = id;
		this.eventtype = eventtype;
		this.attribute = attribute;
		this.isOptional = isOptional;
		this.isTypeProperty = isTypeProperty;
		this.isCommitmentProperty = isCommitmentProperty;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "attributeId", column = @Column(name = "Attribute_Id", nullable = false, length = 150)),
			@AttributeOverride(name = "eventTypeId", column = @Column(name = "EventType_Id", nullable = false, length = 150)) })
	public EventtypeHasAdditionalattributeId getId() {
		return this.id;
	}

	public void setId(EventtypeHasAdditionalattributeId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EventType_Id", nullable = false, insertable = false, updatable = false)
	public Eventtype getEventtype() {
		return this.eventtype;
	}

	public void setEventtype(Eventtype eventtype) {
		this.eventtype = eventtype;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Attribute_Id", nullable = false, insertable = false, updatable = false)
	public Attribute getAttribute() {
		return this.attribute;
	}

	public void setAttribute(Attribute attribute) {
		this.attribute = attribute;
	}

	@Column(name = "IsOptional", nullable = false)
	public boolean isIsOptional() {
		return this.isOptional;
	}

	public void setIsOptional(boolean isOptional) {
		this.isOptional = isOptional;
	}

	@Column(name = "IsTypeProperty", nullable = false)
	public boolean isIsTypeProperty() {
		return this.isTypeProperty;
	}

	public void setIsTypeProperty(boolean isTypeProperty) {
		this.isTypeProperty = isTypeProperty;
	}

	@Column(name = "IsCommitmentProperty", nullable = false)
	public boolean isIsCommitmentProperty() {
		return this.isCommitmentProperty;
	}

	public void setIsCommitmentProperty(boolean isCommitmentProperty) {
		this.isCommitmentProperty = isCommitmentProperty;
	}

}
