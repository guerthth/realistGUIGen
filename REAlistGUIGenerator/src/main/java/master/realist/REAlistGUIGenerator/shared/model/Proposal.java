package master.realist.REAlistGUIGenerator.shared.model;

// Generated Dec 10, 2013 2:10:07 PM by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Proposal generated by hbm2java
 */
@Entity
@Table(name = "proposal", catalog = "rea")
public class Proposal implements java.io.Serializable {

	private int id;
	private Agent agent;
	private Proposal proposal;
	private Negotiation negotiation;
	private boolean isBinding;
	private Date date;
	private Date validDueDate;
	private Set<Proposal> proposals = new HashSet<Proposal>(0);
	private Set<Commitment> commitments = new HashSet<Commitment>(0);
	private Set<Agent> agents = new HashSet<Agent>(0);

	public Proposal() {
	}

	public Proposal(int id, Agent agent, Negotiation negotiation,
			boolean isBinding, Date date, Date validDueDate) {
		this.id = id;
		this.agent = agent;
		this.negotiation = negotiation;
		this.isBinding = isBinding;
		this.date = date;
		this.validDueDate = validDueDate;
	}

	public Proposal(int id, Agent agent, Proposal proposal,
			Negotiation negotiation, boolean isBinding, Date date,
			Date validDueDate, Set<Proposal> proposals,
			Set<Commitment> commitments, Set<Agent> agents) {
		this.id = id;
		this.agent = agent;
		this.proposal = proposal;
		this.negotiation = negotiation;
		this.isBinding = isBinding;
		this.date = date;
		this.validDueDate = validDueDate;
		this.proposals = proposals;
		this.commitments = commitments;
		this.agents = agents;
	}

	@Id
	@Column(name = "Id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ProposingAgent_Id", nullable = false)
	public Agent getAgent() {
		return this.agent;
	}

	public void setAgent(Agent agent) {
		this.agent = agent;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ParentProposal_Id")
	public Proposal getProposal() {
		return this.proposal;
	}

	public void setProposal(Proposal proposal) {
		this.proposal = proposal;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Negotiation_Id", nullable = false)
	public Negotiation getNegotiation() {
		return this.negotiation;
	}

	public void setNegotiation(Negotiation negotiation) {
		this.negotiation = negotiation;
	}

	@Column(name = "IsBinding", nullable = false)
	public boolean isIsBinding() {
		return this.isBinding;
	}

	public void setIsBinding(boolean isBinding) {
		this.isBinding = isBinding;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "Date", nullable = false, length = 19)
	public Date getDate() {
		return this.date;
	}

	public void setDate(Date date) {
		this.date = date;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ValidDueDate", nullable = false, length = 19)
	public Date getValidDueDate() {
		return this.validDueDate;
	}

	public void setValidDueDate(Date validDueDate) {
		this.validDueDate = validDueDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "proposal")
	public Set<Proposal> getProposals() {
		return this.proposals;
	}

	public void setProposals(Set<Proposal> proposals) {
		this.proposals = proposals;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "proposal_has_commitment", catalog = "rea", joinColumns = { @JoinColumn(name = "Proposal_Id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "Commitment_Id", nullable = false, updatable = false) })
	public Set<Commitment> getCommitments() {
		return this.commitments;
	}

	public void setCommitments(Set<Commitment> commitments) {
		this.commitments = commitments;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "proposal_has_targetagent", catalog = "rea", joinColumns = { @JoinColumn(name = "Proposal_Id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "Agent_Id", nullable = false, updatable = false) })
	public Set<Agent> getAgents() {
		return this.agents;
	}

	public void setAgents(Set<Agent> agents) {
		this.agents = agents;
	}

}
