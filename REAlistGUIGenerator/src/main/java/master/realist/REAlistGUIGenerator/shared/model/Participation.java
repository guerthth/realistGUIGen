package master.realist.REAlistGUIGenerator.shared.model;

// Generated Dec 10, 2013 2:10:07 PM by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Participation generated by hbm2java
 */
@Entity
@Table(name = "participation", catalog = "rea")
public class Participation implements java.io.Serializable {

	private Integer participationId;
	private Agent agent;
	private Set<Event> events = new HashSet<Event>(0);
	private Set<ParticipationHasAdditionalattributevalue> participationHasAdditionalattributevalues = new HashSet<ParticipationHasAdditionalattributevalue>(
			0);
	private Set<Commitment> commitments = new HashSet<Commitment>(0);

	public Participation() {
	}

	public Participation(Agent agent) {
		this.agent = agent;
	}

	public Participation(
			Agent agent,
			Set<Event> events,
			Set<ParticipationHasAdditionalattributevalue> participationHasAdditionalattributevalues,
			Set<Commitment> commitments) {
		this.agent = agent;
		this.events = events;
		this.participationHasAdditionalattributevalues = participationHasAdditionalattributevalues;
		this.commitments = commitments;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "Participation_id", unique = true, nullable = false)
	public Integer getParticipationId() {
		return this.participationId;
	}

	public void setParticipationId(Integer participationId) {
		this.participationId = participationId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Agent_Id", nullable = false)
	public Agent getAgent() {
		return this.agent;
	}

	public void setAgent(Agent agent) {
		this.agent = agent;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "event_has_participation", catalog = "rea", joinColumns = { @JoinColumn(name = "Participation_Participation_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "Event_Id", nullable = false, updatable = false) })
	public Set<Event> getEvents() {
		return this.events;
	}

	public void setEvents(Set<Event> events) {
		this.events = events;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "participation")
	public Set<ParticipationHasAdditionalattributevalue> getParticipationHasAdditionalattributevalues() {
		return this.participationHasAdditionalattributevalues;
	}

	public void setParticipationHasAdditionalattributevalues(
			Set<ParticipationHasAdditionalattributevalue> participationHasAdditionalattributevalues) {
		this.participationHasAdditionalattributevalues = participationHasAdditionalattributevalues;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "commitment_has_participation", catalog = "rea", joinColumns = { @JoinColumn(name = "Participation_Participation_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "Commitment_Id", nullable = false, updatable = false) })
	public Set<Commitment> getCommitments() {
		return this.commitments;
	}

	public void setCommitments(Set<Commitment> commitments) {
		this.commitments = commitments;
	}

}
