package master.realist.REAlistGUIGenerator.shared.model;

// Generated Nov 19, 2013 8:35:27 PM by Hibernate Tools 4.0.0

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * ResourcetypeHasAdditionalattribute generated by hbm2java
 */
@Entity
@Table(name = "resourcetype_has_additionalattribute", catalog = "rea")
public class ResourcetypeHasAdditionalattribute implements java.io.Serializable {

	private ResourcetypeHasAdditionalattributeId id;
	private Resourcetype resourcetype;
	private Attribute attribute;
	private boolean isBulkProperty;
	private boolean isOptional;

	public ResourcetypeHasAdditionalattribute() {
	}

	public ResourcetypeHasAdditionalattribute(
			ResourcetypeHasAdditionalattributeId id, Resourcetype resourcetype,
			Attribute attribute, boolean isBulkProperty, boolean isOptional) {
		this.id = id;
		this.resourcetype = resourcetype;
		this.attribute = attribute;
		this.isBulkProperty = isBulkProperty;
		this.isOptional = isOptional;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "resourceTypeId", column = @Column(name = "ResourceType_Id", nullable = false, length = 150)),
			@AttributeOverride(name = "attributeId", column = @Column(name = "Attribute_Id", nullable = false, length = 150)) })
	public ResourcetypeHasAdditionalattributeId getId() {
		return this.id;
	}

	public void setId(ResourcetypeHasAdditionalattributeId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ResourceType_Id", nullable = false, insertable = false, updatable = false)
	public Resourcetype getResourcetype() {
		return this.resourcetype;
	}

	public void setResourcetype(Resourcetype resourcetype) {
		this.resourcetype = resourcetype;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Attribute_Id", nullable = false, insertable = false, updatable = false)
	public Attribute getAttribute() {
		return this.attribute;
	}

	public void setAttribute(Attribute attribute) {
		this.attribute = attribute;
	}

	@Column(name = "IsBulkProperty", nullable = false)
	public boolean isIsBulkProperty() {
		return this.isBulkProperty;
	}

	public void setIsBulkProperty(boolean isBulkProperty) {
		this.isBulkProperty = isBulkProperty;
	}

	@Column(name = "IsOptional", nullable = false)
	public boolean isIsOptional() {
		return this.isOptional;
	}

	public void setIsOptional(boolean isOptional) {
		this.isOptional = isOptional;
	}

}
